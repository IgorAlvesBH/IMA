@model Xpto.ViewModel.ViagemViewModel

@{
  ViewBag.Title = "Avaliar viagem";
}

<h2>Preencher avaliação</h2>


@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <h4>ViagemViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdViagem)

    <div class="form-group">
      @Html.LabelFor(model => model.DataInicio, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.DataInicio,  new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DataInicio, "", new { @class = "text-danger" })        
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.DataFim, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.DataFim, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DataFim, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.IdCliente, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.IdCliente, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.IdDestino, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.IdDestino, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.IdDestino, "", new { @class = "text-danger" })
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.Destino.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DisplayFor(model => model.Destino.Nome, new { htmlAttributes = new { @class = "form-control" } })
      </div>
    </div>
    <div>
      @Html.LabelFor(model => model.Avaliacao, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Avaliacao, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Avaliacao, "", new { @class = "text-danger" })        
      </div>
      Por favor preencha conforme os valores: MuitoRuim, Ruim, Regular, Bom, Muitobom, Excelente
    </div>
    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />
      </div>
    </div>
  </div>
}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
